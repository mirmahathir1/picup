CREATE TABLE PERSONS(
	PERSON_ID SERIAL PRIMARY KEY,
	NAME TEXT,
	EMAIL_ID TEXT UNIQUE,
	PASSWORD TEXT,
	PROFILE_PHOTO TEXT
);
CREATE TABLE POSTS(
	POST_ID SERIAL PRIMARY KEY,
	POST_PHOTO TEXT,
	PERSON_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE,
	DATE_TIME TIMESTAMP(0),
	CAPTION TEXT
);

CREATE TABLE TAGS(
	POST_ID INTEGER REFERENCES POSTS(POST_ID) ON DELETE CASCADE,
	TAG TEXT
);

CREATE TABLE LIKES(
	LIKE_ID SERIAL PRIMARY KEY,
	PERSON_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE,
	POST_ID INTEGER REFERENCES POSTS(POST_ID) ON DELETE CASCADE,
	DATE_TIME TIMESTAMP(0)
);

CREATE TABLE COMMENTS(
	COMMENT_ID SERIAL PRIMARY KEY,
	PERSON_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE,
	POST_ID INTEGER REFERENCES POSTS(POST_ID) ON DELETE CASCADE,
	DESCRIPTION TEXT,
	DATE_TIME TIMESTAMP(0)
);

CREATE TABLE GROUPS(
	GROUP_ID SERIAL PRIMARY KEY,
	GROUP_NAME TEXT,
	GROUP_PHOTO TEXT
);

CREATE TABLE GROUP_MEMBERS(
	PERSON_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE,
	GROUP_ID INTEGER REFERENCES GROUPS(GROUP_ID) ON DELETE CASCADE,
	IS_ADMIN BOOLEAN DEFAULT FALSE
);


CREATE TABLE GROUP_POSTS(
	POST_ID INTEGER REFERENCES POSTS(POST_ID) ON DELETE CASCADE,
	GROUP_ID INTEGER REFERENCES GROUPS(GROUP_ID) ON DELETE CASCADE
);

CREATE TABLE NOTIFICATIONS(
	NOTIFICATION_ID SERIAL PRIMARY KEY,
	PERSON_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE,
	DESCRIPTION TEXT,
	LINK TEXT,
	DATE_TIME TIMESTAMP(0)
);

CREATE TABLE FRIENDS(
	FRIEND_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE,
	PERSON_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE
);

CREATE TABLE FRIENDS_PENDING(
	FRIEND_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE,
	PERSON_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE
);

CREATE TABLE ALBUMS(
	ALBUM_ID SERIAL PRIMARY KEY,
	PERSON_ID INTEGER REFERENCES PERSONS(PERSON_ID) ON DELETE CASCADE,
	ALBUM_NAME TEXT,
	IS_PRIVATE BOOLEAN
);

CREATE TABLE ALBUM_PHOTOS(
	ALBUM_ID INTEGER REFERENCES ALBUMS(ALBUM_ID) ON DELETE CASCADE,
	ALBUM_PHOTO TEXT
);

CREATE SEQUENCE PHOTO_SEQ START 101;

CREATE TABLE USERS(
USER_ID INTEGER,
IP_ADDRESS TEXT,
INFO TEXT
);

CREATE EXTENSION pgcrypto;